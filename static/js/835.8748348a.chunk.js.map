{"version":3,"file":"static/js/835.8748348a.chunk.js","mappings":"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","sources":["redux/filter/selectors.js","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactItem/ContactItem.styled.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Message/Message.styled.jsx","components/Message/Message.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ToastContainer/ToastContainer.jsx","pages/Contacts/Contacts.styled.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["export const selectFilterValue = state => state.filter.value;\n","import styled from '@emotion/styled';\n\nexport const StyledLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 18px;\n  color: ${({ theme }) => {\n    return theme.colors.mainColor;\n  }};\n`;\n\nexport const StyledInput = styled.input`\n  width: 300px;\n  padding: 12px 12px 12px 15px;\n  font-size: 16px;\n  border-radius: ${({ theme }) => {\n    return theme.borderRadius;\n  }};\n  border: 2px solid\n    ${({ theme }) => {\n      return theme.colors.mainColor;\n    }};\n    background-color: ${({ theme }) => {\n    return theme.colors.mainBackgroundColor;\n  }};\n  color: ${({ theme }) => {\n    return theme.colors.mainColor;\n  }};\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/filter/slice';\nimport { selectFilterValue } from 'redux/filter/selectors';\nimport { StyledLabel, StyledInput } from './Filter.styled';\n\nfunction Filter() {\n  const dispatch = useDispatch();\n  const filterValue = useSelector(selectFilterValue);\n  return (\n    <StyledLabel>\n      Find contacts by name\n      <StyledInput\n        name=\"filter\"\n        type=\"text\"\n        onChange={event => dispatch(setFilter(event.currentTarget.value))}\n        value={filterValue}\n      />\n    </StyledLabel>\n  );\n}\n\nexport default Filter;\n","import styled from '@emotion/styled';\n\nexport const ListItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  max-width: 400px; \n  padding: 12px;\n  font-size: 16px;  \n  border-radius: ${({ theme }) => {\n    return theme.borderRadius;\n  }};\n  background-color: ${({ theme }) => {\n    return theme.colors.mainBackgroundColor;\n  }};\n  color: ${({ theme }) => {\n    return theme.colors.mainColor;\n  }};  \n`;\n\nexport const ContactInfo = styled.p`\n  margin: 0;\n`\n\nexport const StyledButton = styled.button`\n  width: 70px;\n  height: 40px;\n  transform: scale(1);\n  background-color: ${({ theme }) => {\n    return theme.colors.mainColor;\n  }};\n  border-radius: ${({ theme }) => {\n    return theme.borderRadius;\n  }};\n  border: 2px solid\n    ${({ theme }) => {\n      return theme.colors.mainColor;\n    }};\n    color: ${({ theme }) => {\n    return theme.colors.mainBackgroundColor;\n  }};\n  font-size: 14px;\n  transition: transform 250ms ease-out, background-color 250ms ease-out;\n  &:hover,\n  &:focus-visible {\n    transform: scale(1.1);\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\nimport { useDeleteContactMutation } from 'services/contactsApi';\nimport { ListItem, StyledButton, ContactInfo } from './ContactItem.styled';\n\nfunction ContactItem({ id, name, number }) {\n\n  const [deleteContact] = useDeleteContactMutation(); \n\n   const removeContact = async (contactId, contactName) => {\n    try {\n      await deleteContact(contactId);\n      toast.info(\n        `\"${contactName}\" has been deleted from your phone book`\n      );\n    } catch (error) {     \n      toast.error(\n        `Something has happened, \"${contactName}\" was not deleted`\n      );\n    }\n  };\n\n  return (\n    <ListItem>\n      <ContactInfo>\n        {name}: {number}\n      </ContactInfo>\n      <StyledButton type=\"button\" onClick={() => removeContact(id, name)}>\n        Delete\n      </StyledButton>\n    </ListItem>\n  );\n}\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n\nexport default ContactItem;\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  margin: 0;\n  padding: 0; \n  height: 60%;\n  overflow: auto;\n`;\n","import { useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport ContactItem from 'components/ContactItem';\nimport { selectFilterValue } from 'redux/filter/selectors';\nimport { useFetchContactsQuery } from 'services/contactsApi';\nimport { List } from './ContactList.styled';\n\nfunction ContactList() {\n  const filterValue = useSelector(selectFilterValue);\n\n  const { data: contacts } = useFetchContactsQuery();\n\n  const getFilteredContacts = useMemo(\n    () => () => {\n      if (!contacts) {\n        return;\n      }\n\n      const normalizedFilter = filterValue.toLowerCase().trim();\n\n      return contacts.filter(\n        contact =>\n          contact.name.toLowerCase().includes(normalizedFilter) ||\n          contact.number.includes(normalizedFilter)\n      );\n    },\n    [contacts, filterValue]\n  );\n\n  const filteredContacts = getFilteredContacts();\n\n  return (\n    <List>\n      {filteredContacts &&\n        filteredContacts.map(({ id, name, number }) => {\n          return <ContactItem key={id} id={id} name={name} number={number} />;\n        })}\n    </List>\n  );\n}\n\nexport default ContactList;\n","import styled from '@emotion/styled';\n\nexport const MessageText = styled.p`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 0;\n  font-size: 24px;\n  width: 90%;  \n  background-color: ${({ theme }) => {\n    return theme.colors.mainBackgroundColor;\n  }};\n  color: ${({ theme }) => {\n    return theme.colors.mainColor;\n  }};\n  border-radius: ${({ theme }) => {\n    return theme.borderRadius;\n  }};\n  border: 2px solid ${({ theme }) => {\n    return theme.colors.mainColor;\n  }};\n  text-align: center;\n`;\n","import PropTypes from 'prop-types';\nimport { MessageText } from './Message.styled';\n\nfunction Message({ message }) {\n  return <>{message && <MessageText>{message}</MessageText>}</>;\n}\n\nMessage.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Message;\n","import styled from '@emotion/styled';\n\nexport const StyledForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 30px;\n  width: 65%;\n`;\n\nexport const StyledLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 18px;\n  color: ${({ theme }) => {\n    return theme.colors.mainColor;\n  }};\n  div {\n    padding: 12px;\n    border: 2px solid  ${({ theme }) => {\n      return theme.colors.mainColor;\n    }};\n    border-radius: ${({ theme }) => {\n      return theme.borderRadius;\n    }};\n    background-color: ${({ theme }) => {\n    return theme.colors.accentColor;\n  }};\n  color: ${({ theme }) => {\n      return theme.colors.secondaryBackgroundColor;\n    }};\n    width: calc(100%);\n    font-size: 16px;\n    &::first-letter {\n      text-transform: uppercase;\n    }\n  }\n`;\n\nexport const StyledInput = styled.input`\n  width: 300px;  \n  padding: 12px 12px 12px 15px;\n  font-size: 16px;\n  border-radius: ${({ theme }) => {\n    return theme.borderRadius;\n  }};\n  border: 2px solid\n    ${({ theme }) => {\n      return theme.colors.mainColor;\n    }};\n     background-color: ${({ theme }) => {\n    return theme.colors.mainBackgroundColor;\n  }};\n   color: ${({ theme }) => {\n    return theme.colors.mainColor;\n  }};\n  &::placeholder {\n    font-size: 16px;\n    color: ${({ theme }) => {\n    return theme.colors.mainColor;\n  }};\n  }\n`;\n\nexport const StyledButton = styled.button`\n  width: 100%;\n  padding: 12px;\n  transform: scale(1);\n  color: ${({ theme }) => {\n    return theme.colors.mainColor;\n  }};\n  border-radius: ${({ theme }) => {\n    return theme.borderRadius;\n  }};\n  border: 2px solid ${({ theme }) => {\n    return theme.colors.mainColor;\n  }};\n  font-size: ${({ theme }) => {\n    return theme.fontStyles.size;\n  }};\n  font-weight: ${({ theme }) => {\n    return theme.fontStyles.fontWeight;\n  }};\n  background-color: ${({ theme }) => {\n    return theme.colors.mainBackgroundColor;\n  }};\n  transition: transform 250ms ease-out, background-color 250ms ease-out;\n  &:hover,\n  &:focus-visible {\n    color: ${({ theme }) => {\n      return theme.colors.accentColor;\n    }};\n    border: 2px solid ${({ theme }) => {\n    return theme.colors.accentColor;\n  }};\n    transform: scale(1.1);\n  }\n`;\n","import { useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\nimport { toast } from 'react-toastify';\nimport { useAddContactMutation, useFetchContactsQuery } from 'services/contactsApi';\n\nimport {\n  StyledLabel,\n  StyledForm,\n  StyledInput,\n  StyledButton,\n} from './ContactForm.styled';\n\nconst nameRegex = /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/;\n\nconst numberRegex =\n  /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/;\n\nconst schema = yup.object().shape({\n  name: yup\n    .string()\n    .trim()\n    .max(64)\n    .required('Name is required')\n    .matches(nameRegex, {\n      message:\n        \"Invalid name. Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan.\",\n    }),\n\n  number: yup\n    .string()\n    .trim()\n    .required('Number is required')\n    .min(5)\n    .matches(numberRegex, {\n      message:\n        'Invalid number. Phone number must be digits and can contain spaces, dashes, parentheses and can start with +.',\n    }),\n});\n\nfunction ContactForm() {\n  const { data: contacts } = useFetchContactsQuery();\n  const [addContact] = useAddContactMutation();\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    reset,\n    formState,\n  } = useForm({\n    defaultValues: {\n      name: '',\n      number: '',\n    },\n    resolver: yupResolver(schema),\n    mode: 'onTouched',\n  });\n\n  useEffect(() => {\n    if (formState.isSubmitSuccessful) {\n      reset();\n    }\n  }, [formState.isSubmitSuccessful, reset]);\n\n  const addNewContact = async data => {\n    const normalizedName = data.name.toLowerCase();\n\n    if (\n      contacts.find(item => item.name.toLowerCase() === normalizedName)\n    ) {\n      return toast.info(`${data.name} is already in contacts!`);\n    }\n    try {\n      await addContact(data);\n      toast.info('New contact has been added in your phone book');\n    } catch (error) {\n      console.log(error.message);\n      toast.error('Something has happened, new contact was not added');\n    }       \n  };\n\n  return (\n    <StyledForm onSubmit={handleSubmit(addNewContact)}>\n      <StyledLabel>\n        Name\n        <StyledInput\n          type=\"text\"\n          placeholder=\"Enter a contact name\"\n          autoComplete=\"off\"\n          {...register('name')}\n        />\n        {errors.name && <div>{errors.name?.message}</div>}\n      </StyledLabel>\n\n      <StyledLabel>\n        Number\n        <StyledInput\n          type=\"tel\"\n          placeholder=\"Enter a contact number\"\n          autoComplete=\"off\"\n          {...register('number')}\n        />\n        {errors.number && <div>{errors.number?.message}</div>}\n      </StyledLabel>\n\n      <StyledButton type=\"submit\" >Send</StyledButton>\n    </StyledForm>\n  );\n}\n\nexport default ContactForm;\n","import { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport function ToastWrapper() {\n  return (\n    <ToastContainer\n      position=\"top-right\"\n      autoClose={3000}\n      hideProgressBar={false}\n      newestOnTop={false}\n      closeOnClick\n      rtl={false}\n      pauseOnFocusLoss\n      draggable\n      pauseOnHover\n      theme=\"light\"\n    />\n  );\n}","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 30px;\n`;\n\nexport const SectionsContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 40px;\n  justify-content: center;  \n  flex-grow: 1;\n`;\n\nexport const Section = styled.section`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 30px;\n  max-width: 500px;\n  min-height: 570px;\n  padding: 20px;\n  background-color: ${({ theme }) => {\n    return theme.colors.secondaryBackgroundColor;\n  }};\n  border-radius: ${({ theme }) => {\n    return theme.borderRadius;\n  }};\n  box-shadow: ${({ theme }) => {\n    return theme.boxShadow;\n  }};\n`;\n\nexport const Title = styled.h1`\n  margin-top: 0;\n  margin-bottom: 40px;\n  text-align: center;\n  font-size: 32px;\n  text-transform: uppercase;\n`;\n\nexport const SectionTitle = styled.h2`\n  margin-top: 0;\n  text-align: center;\n  font-size: 28px;\n  color: ${({ theme }) => {\n    return theme.colors.mainColor;\n  }};\n`;\n","import { useFetchContactsQuery } from 'services/contactsApi';\nimport Filter from 'components/Filter';\nimport ContactList from 'components/ContactList';\nimport Message from 'components/Message';\nimport ContactForm from 'components/ContactForm';\nimport { ToastWrapper } from 'components/ToastContainer/ToastContainer';\n\nimport {\n  Container,\n  SectionsContainer,\n  Section,\n  SectionTitle,\n} from './Contacts.styled';\n\nfunction Contacts() {\n   const {\n    data: contacts,   \n  } = useFetchContactsQuery();\n\n  const totalContacts = () => {\n    if (!contacts) {\n      return 0;\n    }\n    return contacts.length;\n  };\n\n  return (\n    <Container>\n      <SectionsContainer>\n        <Section>\n          <SectionTitle>Add contact</SectionTitle>\n          <ContactForm />\n        </Section>\n        <Section>\n          <SectionTitle>Contacts</SectionTitle>{' '}\n          {totalContacts !== 0 ? (\n            <>\n              <Filter />\n              <ContactList />\n            </>\n          ) : (\n            <Message message=\"There are no contacts in your Phonebook. Please add your first contact!\" />\n          )}\n        </Section>\n      </SectionsContainer>\n      <ToastWrapper />\n    </Container>\n  );\n}\nexport default Contacts;\n"],"names":["selectFilterValue","state","filter","value","StyledLabel","styled","theme","colors","mainColor","StyledInput","borderRadius","mainBackgroundColor","dispatch","useDispatch","filterValue","useSelector","name","type","onChange","event","setFilter","currentTarget","ListItem","ContactInfo","StyledButton","id","number","useDeleteContactMutation","deleteContact","removeContact","contactId","contactName","toast","onClick","List","contacts","useFetchContactsQuery","data","filteredContacts","useMemo","normalizedFilter","toLowerCase","trim","contact","includes","getFilteredContacts","map","MessageText","message","StyledForm","accentColor","secondaryBackgroundColor","fontStyles","size","fontWeight","schema","yup","shape","max","required","matches","min","useAddContactMutation","addContact","useForm","defaultValues","resolver","yupResolver","mode","register","handleSubmit","errors","formState","reset","useEffect","isSubmitSuccessful","addNewContact","normalizedName","find","item","console","log","onSubmit","placeholder","autoComplete","ToastWrapper","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","Container","SectionsContainer","Section","boxShadow","SectionTitle","length"],"sourceRoot":""}